"use strict";(self["webpackChunkvue_url_arcgis"]=self["webpackChunkvue_url_arcgis"]||[]).push([[5512],{34718:function(t,e,n){n.d(e,{BH:function(){return g},K:function(){return D},KC:function(){return m},NL:function(){return c},QI:function(){return w},Tg:function(){return d},Yx:function(){return u},nb:function(){return T},wF:function(){return V}});n(48675),n(3462);var r=n(8723),o=n(27092),a=n(40463),i=n(28547);const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const l=180/Math.PI,h=5,c=new r.Xn({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function u(t,e){return s.get(t)/s.get(e)||1}function f(t){return(450-t)%360}function d(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*l;return a=(360+a)%360,"geographic"===e&&(a=f(a)),[o,a]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=f(n)),n%=360;const r=t[0];return[r*Math.cos(n/l),r*Math.sin(n/l)]}function m(t,e,n="geographic",r=1){if(!(0,i.nk)(t))return t;const{pixels:o,width:s,height:l}=t,h=s*l,c=o[0],u=o[1],f=a.Z.createEmptyBand(t.pixelType,h),m=a.Z.createEmptyBand(t.pixelType,h);let w=0;for(let a=0;a<l;a++)for(let t=0;t<s;t++)"vector-uv"===e?([f[w],m[w]]=d([c[w],u[w]],n),f[w]*=r):([f[w],m[w]]=p([c[w],u[w]],n),f[w]*=r,m[w]*=r),w++;const g=new a.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[f,m]});return g.updateStatistics(),g}function w(t,e,n=1){if(1===n||!(0,i.nk)(t))return t;const r=t.clone(),{pixels:o,width:a,height:s}=r,l=o[0],h=o[1];let c=0;for(let i=0;i<s;i++)for(let t=0;t<a;t++)"vector-uv"===e?(l[c]*=n,h[c]*=n):l[c]*=n,c++;return r.updateStatistics(),r}function g(t,e,n,r,a){if(!(0,o.pC)(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:e,height:n,resolution:t.width/e};const i=a.xmin,s=a.ymax;r=Math.max(r||0,30);const l=Math.ceil(e*(1/r)),h=Math.ceil(n*(1/r)),c=((t.xmax-t.xmin)/l+(t.ymax-t.ymin)/h)/2;return t.xmin=i+Math.floor((t.xmin-i)/c)*c,t.xmax=i+Math.ceil((t.xmax-i)/c)*c,t.ymin=s+Math.floor((t.ymin-s)/c)*c,t.ymax=s+Math.ceil((t.ymax-s)/c)*c,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/c),resolution:c}}const M=x(0,0,0);function x(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,i=-7*o,s=-2*o,l=-16*o,h=29,[c,u]=k(0,e+a,n,h),[f,d]=k(t-5.5,e+i,n,h),[p,m]=k(t+5.5,e+i,n,h),[w,g]=k(t-1.5,e+s,n,h),[M,x]=k(t+1.5,e+s,n,h),[y,v]=k(t-1.5,e+l,n,h),[A,P]=k(t+1.5,e+l,n,h);return[c,u,f,d,w,g,M,x,p,m,y,v,A,P]}function y(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,a=5*o,i=20*o,s=25*o,l=45,c=0,u=0,f=2,d=0,p=f*o;let[m,w]=[c+r/2,u-i],[g,M]=[m+f,w],[x,y]=[g-d,M+p],[v,A]=[c-r/2,u-s],[P,b]=[v+d,A-p],I=Math.ceil(t/h),F=Math.floor(I/10);I-=8*F;const _=[],S=[];for(let h=0;h<I/2;h++,F--){F<=0&&I%2==1&&h===(I-1)/2&&(v=c,P=v+d,A=(A+w)/2,b=A-p);const[t,n]=k(v,A,e,l);if(F>0){const[r,o]=k(g,A,e,l),[a,i]=k(m,w,e,l);_.push(r),_.push(o),_.push(t),_.push(n),_.push(a),_.push(i)}else{const[r,o]=k(g,M,e,l),[a,i]=k(x,y,e,l),[s,h]=k(P,b,e,l);S.push(t),S.push(n),S.push(s),S.push(h),S.push(a),S.push(i),S.push(r),S.push(o)}A+=a,w+=a,M+=a,y+=a,b+=a}const[D,V]=k(c+r/2,u+i,e,l),T=r/2+f,[L,U]=k(c+T,u+i,e,l),[C,Z]=k(c+r/2,u-s,e,l),[B,O]=k(c+T,u-s,e,l);return{pennants:_,barbs:S,shaft:[D,V,L,U,C,Z,B,O]}}function k(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+a-n)%(2*Math.PI)]}const v=[0,1,3,6,10,16,21,27,33,40,47,55,63],A=[0,.5,1,1.5,2],P=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function b(t,e,n,r){const o=u(r||"knots",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function I(t,e,n,r,o){let a=0;switch(e){case"beaufort_kn":a=b(t,v,"knots",n);break;case"beaufort_km":a=b(t,v,"kilometer-per-hour",n);break;case"beaufort_ft":a=b(t,v,"feet-per-second",n);break;case"beaufort_m":a=b(t,v,"meter-per-second",n);break;case"classified_arrow":a=b(t,o,r,n);break;case"ocean_current_m":a=b(t,A,"meter-per-second",n);break;case"ocean_current_kn":a=b(t,P,"knots",n)}return a}function F(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:a}=e,i=c.fromJSON(r),s=c.fromJSON(o),l=42,h=15;let u=0,f=0;const{width:d,height:p,mask:m}=t,w=t.pixels[0],g=t.pixels[1],x=m?m.filter((t=>t>0)).length:d*p,y=new Float32Array(x*l),k=new Uint32Array(h*x);for(let c=0;c<p;c++)for(let t=0;t<d;t++){const e=c*d+t;if(!m||m[c*d+t]){var v;const r=null!=(v=(g[e]+360)%360/180*Math.PI)?v:2*Math.PI*Math.random(),o=I(w[e],n,i,s,a);for(let n=0;n<M.length;n+=2)y[u++]=(t+.5)/d,y[u++]=(c+.5)/p,y[u++]=M[n],y[u++]=M[n+1]+r,y[u++]=o,y[u++]=w[e];const h=7*(u/l-1);k[f++]=h,k[f++]=h+1,k[f++]=h+2,k[f++]=h+0,k[f++]=h+4,k[f++]=h+3,k[f++]=h+0,k[f++]=h+2,k[f++]=h+3,k[f++]=h+2,k[f++]=h+5,k[f++]=h+3,k[f++]=h+5,k[f++]=h+6,k[f++]=h+3}}return{vertexData:y,indexData:k}}const _=[];function S(t,e){if(0===_.length)for(let h=0;h<30;h++)_.push(y(5*h,0));const n=u(c.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:a}=t,i=t.pixels[0],s=t.pixels[1],l=6,f=[],d=[];let p=0,m=0;for(let c=0;c<o;c++)for(let t=0;t<r;t++){const e=c*r+t,u=i[e]*n;if((!a||a[c*r+t])&&u>=h){var w;const n=null!=(w=(s[e]+360)%360/180*Math.PI)?w:2*Math.PI*Math.random(),{pennants:a,barbs:i,shaft:h}=_[Math.min(Math.floor(u/5),29)];if(a.length+i.length===0)continue;let g=f.length/l;const M=(t+.5)/r,x=(c+.5)/o;for(let t=0;t<a.length;t+=2)f[p++]=M,f[p++]=x,f[p++]=a[t],f[p++]=a[t+1]+n,f[p++]=0,f[p++]=u;for(let t=0;t<i.length;t+=2)f[p++]=M,f[p++]=x,f[p++]=i[t],f[p++]=i[t+1]+n,f[p++]=0,f[p++]=u;for(let t=0;t<h.length;t+=2)f[p++]=M,f[p++]=x,f[p++]=h[t],f[p++]=h[t+1]+n,f[p++]=0,f[p++]=u;for(let t=0;t<a.length/6;t++)d[m++]=g,d[m++]=g+1,d[m++]=g+2,g+=3;for(let t=0;t<i.length/8;t++)d[m++]=g,d[m++]=g+1,d[m++]=g+2,d[m++]=g+1,d[m++]=g+2,d[m++]=g+3,g+=4;d[m++]=g+0,d[m++]=g+1,d[m++]=g+2,d[m++]=g+1,d[m++]=g+3,d[m++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(d)}}function D(t,e){const n=24;let r=0,o=0;const{width:a,height:i,mask:s}=t,l=t.pixels[0],c=[],u=[],f="wind_speed"===e.style?h:Number.MAX_VALUE;for(let h=0;h<i;h++)for(let t=0;t<a;t++){const e=h*a+t;if((!s||s[h*a+t])&&l[e]<f){for(let n=0;n<4;n++)c[r++]=(t+.5)/a,c[r++]=(h+.5)/i,c[r++]=n<2?-.5:.5,c[r++]=n%2==0?-.5:.5,c[r++]=0,c[r++]=l[e];const s=4*(r/n-1);u[o++]=s,u[o++]=s+1,u[o++]=s+2,u[o++]=s+1,u[o++]=s+2,u[o++]=s+3}}return{vertexData:new Float32Array(c),indexData:new Uint32Array(u)}}function V(t,e){return"simple_scalar"===e.style?D(t,e):"wind_speed"===e.style?S(t,e):F(t,e)}function T(t,e,n,r=[0,0],o=.5){const{width:i,height:s,mask:l}=t,[h,c]=t.pixels,[u,f]=r,m=Math.round((i-u)/n),w=Math.round((s-f)/n),g=m*w,M=new Float32Array(g),x=new Float32Array(g),y=new Uint8Array(g),k="vector-uv"===e;for(let a=0;a<w;a++)for(let t=0;t<m;t++){let e=0;const r=a*m+t,w=Math.max(0,a*n+f),g=Math.max(0,t*n+u),v=Math.min(s,w+n),A=Math.min(i,g+n);for(let t=w;t<v;t++)for(let n=g;n<A;n++){const o=t*i+n;if(!l||l[o]){e++;const t=k?[h[o],c[o]]:[h[o],(360+c[o])%360],[n,a]=k?t:p(t);M[r]+=n,x[r]+=a}}if(e>=(v-w)*(A-g)*(1-o)){y[r]=1;const[t,n]=d([M[r]/e,x[r]/e]);M[r]=t,x[r]=n}else y[r]=0,M[r]=0,x[r]=0}const v=new a.Z({width:m,height:w,pixels:[M,x],mask:y});return v.updateStatistics(),v}},94292:function(t,e,n){n.d(e,{KK:function(){return y},z_:function(){return f}});n(48675),n(3462),n(75065);var r=n(87441),o=n(14937),a=n(27092),i=n(24446),s=n(88824),l=n(71563),h=n(7230);const c=r.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),u=8;async function f(t,e,n){const r=performance.now(),o=d(t,e),a=performance.now(),s=m(t,o,e.width,e.height),l=performance.now(),h=g(s,!0),u=performance.now(),f=M(h),p=performance.now();if(t.profile){const t={"_createFlowFieldFromData()":Math.round(a-r),"_getStreamlines()":Math.round(l-a),"createAnimatedLinesData()":Math.round(u-l),"createLinesMesh()":Math.round(p-u),"Total elapsed time":Math.round(p-r)};c.info("createStreamlinesMesh profile",t)}return await Promise.resolve(),(0,i.k_)(n),f}function d(t,e){const n=w(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),a=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(a<0||a>=e.height)return[0,0];const i=t-o,s=r-a,l=o,h=a,c=o<e.width-1?o+1:o,u=a<e.height-1?a+1:a,f=n[2*(h*e.width+l)],d=n[2*(h*e.width+c)],p=n[2*(u*e.width+l)],m=n[2*(u*e.width+c)],w=n[2*(h*e.width+l)+1],g=n[2*(h*e.width+c)+1];return[(f*(1-s)+p*s)*(1-i)+(d*(1-s)+m*s)*i,(w*(1-s)+n[2*(u*e.width+l)+1]*s)*(1-i)+(g*(1-s)+n[2*(u*e.width+c)+1]*s)*i]}:(t,r)=>{const o=Math.round(t),a=Math.round(r);return o<0||o>=e.width||a<0||a>=e.height?[0,0]:[n[2*(a*e.width+o)+0],n[2*(a*e.width+o)+1]]}}function p(t,e,n,r,o,a,i,s,l){const h=[];let c,u,f=n,d=r,p=0;h.push({x:f,y:d,t:p});for(let m=0;m<t.verticesPerLine;m++){let[n,r]=e(f,d);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return h;const w=n/m,g=r/m;if(f+=w*t.segmentLength,d+=g*t.segmentLength,p+=t.segmentLength/m,Math.acos(w*c+g*u)>t.maxTurnAngle)return h;if(t.mergeLines){const t=Math.round(f*l),e=Math.round(d*l);if(t<0||t>i-1||e<0||e>s-1)return h;const n=a[e*i+t];if(-1!==n&&n!==o)return h;a[e*i+t]=o}h.push({x:f,y:d,t:p}),c=w,u=g}return h}function m(t,e,n,r){const o=[],a=new s.Z,i=1/Math.max(t.lineCollisionWidth,1),l=Math.round(n*i),h=Math.round(r*i),c=new Int32Array(l*h);for(let s=0;s<c.length;s++)c[s]=-1;const u=[];for(let s=0;s<r;s+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:s,sort:a.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:s,y:f}of u)if(a.getFloat()<t.density){const n=p(t,e,s,f,o.length,c,l,h,i);if(n.length<2)continue;o.push(n)}return o}function w(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),a=new Array(2*o+1);let i=0;for(let h=-o;h<=o;h++){const t=Math.exp(-h*h/(r*r));a[h+o]=t,i+=t}for(let h=-o;h<=o;h++)a[h+o]/=i;const s=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let r=0,i=0;for(let s=-o;s<=o;s++){if(n+s<0||n+s>=e)continue;const l=a[s+o];r+=l*t[2*(h*e+(n+s))+0],i+=l*t[2*(h*e+(n+s))+1]}s[2*(h*e+n)+0]=r,s[2*(h*e+n)+1]=i}const l=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let r=0,i=0;for(let l=-o;l<=o;l++){if(t+l<0||t+l>=n)continue;const c=a[l+o];r+=c*s[2*((t+l)*e+h)+0],i+=c*s[2*((t+l)*e+h)+1]}l[2*(t*e+h)+0]=r,l[2*(t*e+h)+1]=i}return l}function g(t,e){const n=new s.Z,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(3*r),a=new Array(t.length);let i=0,l=0;for(const s of t){const t=i;for(const e of s)o[3*i+0]=e.x,o[3*i+1]=e.y,o[3*i+2]=e.t,i++;a[l++]={startVertex:t,numberOfVertices:s.length,totalTime:s[s.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:a}}function M(t,e=10){const{lineVertices:n,lineDescriptors:r}=t;let o=0,a=0;for(const u of r)o+=2*u.numberOfVertices,a+=6*(u.numberOfVertices-1);const i=new Float32Array(o*u),s=new Uint32Array(a);let l=0,h=0;function c(){s[h++]=l-2,s[h++]=l,s[h++]=l-1,s[h++]=l,s[h++]=l+1,s[h++]=l-1}function f(t,e,n,r,o,a,s){const h=l*u;let c=0;i[h+c++]=t,i[h+c++]=e,i[h+c++]=1,i[h+c++]=n,i[h+c++]=a,i[h+c++]=s,i[h+c++]=r,i[h+c++]=o,l++,i[h+c++]=t,i[h+c++]=e,i[h+c++]=-1,i[h+c++]=n,i[h+c++]=a,i[h+c++]=s,i[h+c++]=-r,i[h+c++]=-o,l++}for(const u of r){const{totalTime:t,timeSeed:r}=u;let o=null,a=null,i=null,s=null,l=null;for(let h=0;h<u.numberOfVertices;h++){const d=n[3*(u.startVertex+h)+0],p=n[3*(u.startVertex+h)+1],m=n[3*(u.startVertex+h)+2];let w=null,g=null,M=null,x=null;if(h>0){w=d-o,g=p-a;const n=Math.sqrt(w*w+g*g);if(w/=n,g/=n,h>1){let t=w+s,n=g+l;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*w+n*g),e);t*=o,n*=o,M=-n,x=t}else M=-g,x=w;null!==M&&null!==x&&(f(o,a,i,M,x,t,r),c())}o=d,a=p,i=m,s=w,l=g}f(o,a,i,-l,s,t,r)}return{vertexData:i,indexData:s}}function x(t,e){const n=e.pixels,{width:r,height:a}=e,i=new Float32Array(r*a*2);if("vector-uv"===t)for(let o=0;o<r*a;o++)i[2*o+0]=n[0][o],i[2*o+1]=-n[1][o];else if("vector-magdir"===t)for(let s=0;s<r*a;s++){const t=n[0][s],e=(0,o.Vl)(n[1][s]),r=Math.cos(e-Math.PI/2),a=Math.sin(e-Math.PI/2);i[2*s+0]=r*t,i[2*s+1]=a*t}return{data:i,width:r,height:a}}async function y(t,e,n,r,o){const a=(0,l.C5)(e.spatialReference);if(!a)return k(t,e,n,r,o);const[i,s]=a.valid,c=s-i,u=Math.ceil(e.width/c),f=e.width/u,d=Math.round(n/u);let p=e.xmin;const m=[];for(let l=0;l<u;l++){const n=new h.Z({xmin:p,xmax:p+f,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(k(t,n,d,r,o)),p+=f}const w=await Promise.all(m),g={data:new Float32Array(n*r*2),width:n,height:r};let M=0;for(const l of w){for(let t=0;t<l.height;t++)for(let e=0;e<l.width;e++)M+e>=n||(g.data[2*(t*n+M+e)+0]=l.data[2*(t*l.width+e)+0],g.data[2*(t*n+M+e)+1]=l.data[2*(t*l.width+e)+1]);M+=l.width}return g}async function k(t,e,n,r,o){if("imagery"===t.type){await t.load({signal:o});const i=t.rasterInfo.dataType,s=await t.fetchImage(e,n,r,{signal:o});return!s||(0,a.Wi)(s.pixelData)||(0,a.Wi)(s.pixelData.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:x(i,s.pixelData.pixelBlock)}await t.load({signal:o});const i=t.rasterInfo.dataType,s=await t.fetchPixels(e,n,r,{signal:o});return!s||(0,a.Wi)(s.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:x(i,s.pixelBlock)}}}]);