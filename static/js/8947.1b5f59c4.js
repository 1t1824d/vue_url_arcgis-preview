"use strict";(self["webpackChunkvue_url_arcgis"]=self["webpackChunkvue_url_arcgis"]||[]).push([[8947],{58947:function(e,t,r){r.r(t),r.d(t,{default:function(){return C}});var o=r(63825),l=r(54643),n=r(27092),i=r(3266),a=r(2553),s=(r(57787),r(35425),r(90202),r(66667)),u=r(92236),c=r(42995),p=r(49471),f=r(47359),d=r(61761);let y=class extends((0,f.q)((0,d.I)((0,i.R)(p.Z)))){constructor(...e){super(...e),this.type="route"}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new c["default"];return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new c["default"];return t.read(e,r),t}))}get fullExtent(){if((0,n.Wi)(this.featureCollections))return null;const e=null;return this.featureCollections.reduce(((e,t)=>(0,n.Wi)(t.fullExtent)?e:(0,n.Wi)(e)?t.fullExtent.clone():e.union(t.fullExtent)),e)}get maxScale(){if((0,n.Wi)(this.featureCollections))return 0;const e=null;return this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),e)}set maxScale(e){(0,n.pC)(this.featureCollections)&&this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}get minScale(){if((0,n.Wi)(this.featureCollections))return 0;const e=null;return this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),e)}set minScale(e){(0,n.pC)(this.featureCollections)&&this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}_getNamedFeatureLayer(e){if(!(0,n.Wi)(this.featureCollections))return this.featureCollections.find((t=>t.title===e))}};(0,o._)([(0,a.Cb)()],y.prototype,"barrierLines",null),(0,o._)([(0,a.Cb)()],y.prototype,"barrierPoints",null),(0,o._)([(0,a.Cb)()],y.prototype,"barrierPolygons",null),(0,o._)([(0,a.Cb)()],y.prototype,"directionLines",null),(0,o._)([(0,a.Cb)()],y.prototype,"directionPoints",null),(0,o._)([(0,a.Cb)({type:l.Z.ofType(c["default"])})],y.prototype,"featureCollections",void 0),(0,o._)([(0,s.r)("portal-item","featureCollections",["layers"])],y.prototype,"readFeatureCollectionsFromItem",null),(0,o._)([(0,s.r)("web-map","featureCollections",["featureCollection.layers"])],y.prototype,"readFeatureCollectionsFromWebMap",null),(0,o._)([(0,a.Cb)({readOnly:!0})],y.prototype,"fullExtent",null),(0,o._)([(0,a.Cb)({type:["show","hide"]})],y.prototype,"listMode",void 0),(0,o._)([(0,a.Cb)()],y.prototype,"minScale",null),(0,o._)([(0,a.Cb)()],y.prototype,"routeInfo",null),(0,o._)([(0,a.Cb)()],y.prototype,"stops",null),(0,o._)([(0,a.Cb)({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),y=(0,o._)([(0,u.j)("esri.layers.RouteLayer")],y);const C=y}}]);