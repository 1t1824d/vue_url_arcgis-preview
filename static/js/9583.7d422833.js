"use strict";(self["webpackChunkvue_url_arcgis"]=self["webpackChunkvue_url_arcgis"]||[]).push([[9583],{16418:function(e,t,r){r.d(t,{i:function(){return f}});var n=r(35680),i=r(90202),s=r(64316),o=r(19724),a=r(45836),l=r(89244);const u=(0,i.se)(l.Z);async function f(e,t,r){t=u(t);const i=(0,o.en)(e),l={...i.query,f:"json",...t.toJSON()},f=t.outSpatialReference,c=(0,s.Ji)(t.geometries[0]),N=(0,o.lA)(l,r);return(0,n["default"])(i.path+"/project",N).then((({data:{geometries:e}})=>(0,a.o)(e,c,f)))}},45836:function(e,t,r){r.d(t,{F:function(){return i},o:function(){return s}});var n=r(64316);function i(e){return{geometryType:(0,n.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function s(e,t,r){const i=(0,n.q9)(t);return e.map((e=>{const t=i.fromJSON(e);return t.spatialReference=r,t}))}},89244:function(e,t,r){r.d(t,{Z:function(){return u}});var n=r(63825),i=r(71741),s=r(2553),o=(r(57787),r(35425),r(90202),r(92236)),a=r(64316);let l=class extends i.wq{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((function(e){return e.toJSON()})),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,a.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,n._)([(0,s.Cb)()],l.prototype,"geometries",void 0),(0,n._)([(0,s.Cb)({json:{read:{source:"outSR"}}})],l.prototype,"outSpatialReference",void 0),(0,n._)([(0,s.Cb)()],l.prototype,"transformation",void 0),(0,n._)([(0,s.Cb)()],l.prototype,"transformForward",void 0),l=(0,n._)([(0,o.j)("esri.rest.support.ProjectParameters")],l);const u=l},19583:function(e,t,r){r.r(t),r.d(t,{default:function(){return ae}});var n=r(63825),i=r(2553),s=(r(57787),r(35425),r(90202)),o=r(92236),a=r(35680),l=r(19724);async function u(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},s=(0,l.lA)(i,r);return(0,a["default"])(n.path+"/areasAndLengths",s).then((e=>e.data))}r(75065);var f=r(45836),c=r(72110);async function N(e,t,r,n){const i=t[0].spatialReference,s=(0,l.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify((0,f.F)(t).geometries),polylines:JSON.stringify((0,f.F)(r).geometries)},u=(0,l.lA)(o,n);return(0,a["default"])(s.path+"/autoComplete",u).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new c.Z({spatialReference:i,rings:e})))))}async function p(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference||t.geometries[0].spatialReference,o=(0,l.lA)(i,r);return(0,a["default"])(n.path+"/buffer",o).then((e=>(e.data.geometries||[]).map((({rings:e})=>new c.Z({spatialReference:s,rings:e})))))}var m=r(64316);async function y(e,t,r){const n=t[0].spatialReference,i=(0,l.en)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,f.F)(t))},o=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/convexHull",o).then((({data:e})=>(0,m.im)(e.geometry).set({spatialReference:n})))}async function d(e,t,r,n){const i=(0,l.en)(e),s=t[0].spatialReference,o={...n,query:{...i.query,f:"json",sr:JSON.stringify(s),target:JSON.stringify({geometryType:(0,m.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},u=await(0,a["default"])(i.path+"/cut",o),{cutIndexes:f,geometries:c=[]}=u.data;return{cutIndexes:f,geometries:c.map((e=>{const t=(0,m.im)(e);return t.spatialReference=s,t}))}}async function _(e,t,r){const n=t.geometries[0].spatialReference,i=(0,l.en)(e),s={...i.query,f:"json",...t.toJSON()},o=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/densify",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,m.im)(e).set({spatialReference:n})))))}async function g(e,t,r,n){const i=t[0].spatialReference,s=(0,l.en)(e);let o={query:{...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify((0,f.F)(t)),geometry:JSON.stringify({geometryType:(0,m.Ji)(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),(0,a["default"])(s.path+"/difference",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,m.im)(e).set({spatialReference:i})))))}async function S(e,t,r){const n=(0,l.en)(e),i={...n.query,f:"json",...t.toJSON()},s=(0,l.lA)(i,r);return(0,a["default"])(n.path+"/distance",s).then((({data:e})=>e&&e.distance))}var T=r(8723);const I=new T.Xn({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});async function O(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const i=t.conversionType||"mgrs";n.conversionType=I.toJSON(i),n.conversionMode=t.conversionMode;const s=(0,l.en)(e),o={...s.query,f:"json",...n},u=(0,l.lA)(o,r);return(0,a["default"])(s.path+"/fromGeoCoordinateString",u).then((({data:e})=>e.coordinates))}var R=r(71741);let h=class extends R.wq{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],h.prototype,"deviationUnit",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],h.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],h.prototype,"maxDeviation",void 0),h=(0,n._)([(0,o.j)("esri.rest.support.GeneralizeParameters")],h),h.from=(0,s.se)(h);const U=h,A=new T.Xn({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function E(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),i={maxDeviation:n};return t&&t.length&&(i.geometries=JSON.stringify({geometryType:(0,m.Ji)(t[0]),geometries:t}),i.sr=JSON.stringify(t[0].spatialReference)),A.write(r,i,"deviationUnit"),i}async function J(e,t,r){const n=(t=U.from(t)).toJSON(),i=E(t),s=(0,l.en)(e),o={...s.query,f:"json",...i},u=n.geometries[0].spatialReference,f=(0,l.lA)(o,r);return(0,a["default"])(s.path+"/generalize",f).then((({data:e})=>(e.geometries||[]).map((e=>(0,m.im)(e).set({spatialReference:u})))))}async function w(e,t,r,n){const i=t[0].spatialReference,s=(0,l.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify((0,f.F)(t)),geometry:JSON.stringify({geometryType:(0,m.Ji)(r),geometry:r.toJSON()})},u=(0,l.lA)(o,n);return(0,a["default"])(s.path+"/intersect",u).then((({data:e})=>(e.geometries||[]).map((e=>(0,m.im)(e).set({spatialReference:i})))))}function v(e,t,r){const n=t.map((e=>e.toJSON())),i=t[0].spatialReference,s=(0,l.en)(e),o={...s.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(n)},u=(0,l.lA)(o,r);return(0,a["default"])(s.path+"/labelPoints",u).then((({data:e})=>(e.labelPoints||[]).map((e=>(0,m.im)(e).set({spatialReference:i})))))}var C=r(12523);let j=class extends R.wq{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],j.prototype,"calculationType",void 0),(0,n._)([(0,i.Cb)({type:Boolean,json:{write:!0}})],j.prototype,"geodesic",void 0),(0,n._)([(0,i.Cb)({json:{write:!0}})],j.prototype,"lengthUnit",void 0),(0,n._)([(0,i.Cb)({type:[C.Z],json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],j.prototype,"polylines",void 0),j=(0,n._)([(0,o.j)("esri.rest.support.LengthsParameters")],j),j.from=(0,s.se)(j);const D=j,b=new T.Xn({preserveShape:"preserve-shape"});function L(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:i}=e.toJSON(),s={};s.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return s.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(s.lengthUnit=r),n&&(s.geodesic=n),i&&(s.calculationType=b.toJSON(i)),s}async function M(e,t,r){t=D.from(t);const n=L(t),i=(0,l.en)(e),s={...i.query,f:"json",...n},o=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/lengths",o).then((({data:e})=>e))}let q=class extends R.wq{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],q.prototype,"bevelRatio",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],q.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({type:Number,json:{write:!0}})],q.prototype,"offsetDistance",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],q.prototype,"offsetHow",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],q.prototype,"offsetUnit",void 0),q=(0,n._)([(0,o.j)("esri.rest.support.OffsetParameters")],q),q.from=(0,s.se)(q);const G=q,x=new T.Xn({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),F=new T.Xn({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function H(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:i,offsetUnit:s}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:(0,m.Ji)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),i&&(o.offsetHow=x.toJSON(i)),s&&(o.offsetUnit=F.toJSON(s)),o}async function k(e,t,r){t=G.from(t);const n=H(t),i=(0,l.en)(e),s={...i.query,f:"json",...n},o=t.geometries[0].spatialReference,u=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/offset",u).then((({data:e})=>(e.geometries||[]).map((e=>(0,m.im)(e).set({spatialReference:o})))))}var Y=r(16418);let K=class extends R.wq{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],K.prototype,"geometries1",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],K.prototype,"geometries2",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],K.prototype,"relation",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],K.prototype,"relationParameter",void 0),K=(0,n._)([(0,o.j)("esri.rest.support.RelationParameters")],K),K.from=(0,s.se)(K);const B=K,P=new T.Xn({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function Q(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:i}=e.toJSON(),s={};if(t&&t.length){s.geometries1=JSON.stringify({geometryType:(0,m.Ji)(t[0]),geometries:t});const e=t[0].spatialReference;s.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(s.geometries2=JSON.stringify({geometryType:(0,m.Ji)(r[0]),geometries:r})),n&&(s.relation=P.toJSON(n)),i&&(s.relationParam=i),s}async function Z(e,t,r){t=B.from(t);const n=Q(t),i=(0,l.en)(e),s={...i.query,f:"json",...n},o=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/relation",o).then((({data:e})=>e.relations))}async function V(e,t,r,n){const i=t.spatialReference,s=(0,l.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:(0,m.Ji)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},u=(0,l.lA)(o,n);return(0,a["default"])(s.path+"/reshape",u).then((({data:e})=>(0,m.im)(e.geometry).set({spatialReference:i})))}var X=r(58476);async function z(e,t,r){const n="string"==typeof e?(0,X.mN)(e):e,i=t[0].spatialReference,s=(0,m.Ji)(t[0]),o={...r,query:{...n.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify((0,f.F)(t))}},{data:l}=await(0,a["default"])(n.path+"/simplify",o);return(0,f.o)(l.geometries,s,i)}async function W(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const i=t.conversionType||"mgrs";n.conversionType=I.toJSON(i),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const s=(0,l.en)(e),o={...s.query,f:"json",...n},u=(0,l.lA)(o,r);return(0,a["default"])(s.path+"/toGeoCoordinateString",u).then((({data:e})=>e.strings))}let $=class extends R.wq{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],$.prototype,"extendHow",void 0),(0,n._)([(0,i.Cb)({type:[C.Z],json:{read:{reader:e=>e?e.map((e=>(0,m.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],$.prototype,"polylines",void 0),(0,n._)([(0,i.Cb)({json:{read:{reader:e=>e?(0,m.im)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],$.prototype,"trimExtendTo",void 0),$=(0,n._)([(0,o.j)("esri.rest.support.TrimExtendParameters")],$),$.from=(0,s.se)($);const ee=$,te=new T.Xn({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function re(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),i={};return i.extendHow=te.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),n&&(i.trimExtendTo=JSON.stringify(n)),i}async function ne(e,t,r){t=ee.from(t);const n=re(t),i=(0,l.en)(e),s={...i.query,f:"json",...n},o=t.sr,u=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/trimExtend",u).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new C.Z({spatialReference:o,paths:e})))))}async function ie(e,t,r){const n=t[0].spatialReference,i=(0,l.en)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,f.F)(t))},o=(0,l.lA)(s,r);return(0,a["default"])(i.path+"/union",o).then((({data:e})=>(0,m.im)(e.geometry).set({spatialReference:n})))}var se=r(31760);let oe=class extends se.Z{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return u(this.url,e,t)}autoComplete(e,t,r){return N(this.url,e,t,r)}buffer(e,t){return p(this.url,e,t)}convexHull(e,t){return y(this.url,e,t)}cut(e,t,r){return d(this.url,e,t,r)}densify(e,t){return _(this.url,e,t)}difference(e,t,r){return g(this.url,e,t,r)}distance(e,t){return S(this.url,e,t)}fromGeoCoordinateString(e,t){return O(this.url,e,t)}generalize(e,t){return J(this.url,e,t)}intersect(e,t,r){return w(this.url,e,t,r)}labelPoints(e,t){return v(this.url,e,t)}lengths(e,t){return M(this.url,e,t)}offset(e,t){return k(this.url,e,t)}project(e,t){return(0,Y.i)(this.url,e,t)}relation(e,t){return Z(this.url,e,t)}reshape(e,t,r){return V(this.url,e,t,r)}simplify(e,t){return z(this.url,e,t)}toGeoCoordinateString(e,t){return W(this.url,e,t)}trimExtend(e,t){return ne(this.url,e,t)}union(e,t){return ie(this.url,e,t)}};oe.UNIT_METER=9001,oe.UNIT_GERMAN_METER=9031,oe.UNIT_FOOT=9002,oe.UNIT_SURVEY_FOOT=9003,oe.UNIT_CLARKE_FOOT=9005,oe.UNIT_FATHOM=9014,oe.UNIT_NAUTICAL_MILE=9030,oe.UNIT_SURVEY_CHAIN=9033,oe.UNIT_SURVEY_LINK=9034,oe.UNIT_SURVEY_MILE=9035,oe.UNIT_KILOMETER=9036,oe.UNIT_CLARKE_YARD=9037,oe.UNIT_CLARKE_CHAIN=9038,oe.UNIT_CLARKE_LINK=9039,oe.UNIT_SEARS_YARD=9040,oe.UNIT_SEARS_FOOT=9041,oe.UNIT_SEARS_CHAIN=9042,oe.UNIT_SEARS_LINK=9043,oe.UNIT_BENOIT_1895A_YARD=9050,oe.UNIT_BENOIT_1895A_FOOT=9051,oe.UNIT_BENOIT_1895A_CHAIN=9052,oe.UNIT_BENOIT_1895A_LINK=9053,oe.UNIT_BENOIT_1895B_YARD=9060,oe.UNIT_BENOIT_1895B_FOOT=9061,oe.UNIT_BENOIT_1895B_CHAIN=9062,oe.UNIT_BENOIT_1895B_LINK=9063,oe.UNIT_INDIAN_FOOT=9080,oe.UNIT_INDIAN_1937_FOOT=9081,oe.UNIT_INDIAN_1962_FOOT=9082,oe.UNIT_INDIAN_1975_FOOT=9083,oe.UNIT_INDIAN_YARD=9084,oe.UNIT_INDIAN_1937_YARD=9085,oe.UNIT_INDIAN_1962_YARD=9086,oe.UNIT_INDIAN_1975_YARD=9087,oe.UNIT_FOOT_1865=9070,oe.UNIT_RADIAN=9101,oe.UNIT_DEGREE=9102,oe.UNIT_ARCMINUTE=9103,oe.UNIT_ARCSECOND=9104,oe.UNIT_GRAD=9105,oe.UNIT_GON=9106,oe.UNIT_MICRORADIAN=9109,oe.UNIT_ARCMINUTE_CENTESIMAL=9112,oe.UNIT_ARCSECOND_CENTESIMAL=9113,oe.UNIT_MIL6400=9114,oe.UNIT_BRITISH_1936_FOOT=9095,oe.UNIT_GOLDCOAST_FOOT=9094,oe.UNIT_INTERNATIONAL_CHAIN=109003,oe.UNIT_INTERNATIONAL_LINK=109004,oe.UNIT_INTERNATIONAL_YARD=109001,oe.UNIT_STATUTE_MILE=9093,oe.UNIT_SURVEY_YARD=109002,oe.UNIT_50KILOMETER_LENGTH=109030,oe.UNIT_150KILOMETER_LENGTH=109031,oe.UNIT_DECIMETER=109005,oe.UNIT_CENTIMETER=109006,oe.UNIT_MILLIMETER=109007,oe.UNIT_INTERNATIONAL_INCH=109008,oe.UNIT_US_SURVEY_INCH=109009,oe.UNIT_INTERNATIONAL_ROD=109010,oe.UNIT_US_SURVEY_ROD=109011,oe.UNIT_US_NAUTICAL_MILE=109012,oe.UNIT_UK_NAUTICAL_MILE=109013,oe.UNIT_SQUARE_INCHES="esriSquareInches",oe.UNIT_SQUARE_FEET="esriSquareFeet",oe.UNIT_SQUARE_YARDS="esriSquareYards",oe.UNIT_ACRES="esriAcres",oe.UNIT_SQUARE_MILES="esriSquareMiles",oe.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",oe.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",oe.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",oe.UNIT_SQUARE_METERS="esriSquareMeters",oe.UNIT_ARES="esriAres",oe.UNIT_HECTARES="esriHectares",oe.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n._)([(0,i.Cb)()],oe.prototype,"url",void 0),oe=(0,n._)([(0,o.j)("esri.tasks.GeometryService")],oe);const ae=oe}}]);